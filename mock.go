// Code generated by MockGen. DO NOT EDIT.
// Source: gomockbug (interfaces: MyInterface)
//
// Generated by this command:
//
//	mockgen -typed -destination=mock.go -package=gomockbug . MyInterface
//

// Package gomockbug is a generated GoMock package.
package gomockbug

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockMyInterface is a mock of MyInterface interface.
type MockMyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMyInterfaceMockRecorder
	isgomock struct{}
}

// MockMyInterfaceMockRecorder is the mock recorder for MockMyInterface.
type MockMyInterfaceMockRecorder struct {
	mock *MockMyInterface
}

// NewMockMyInterface creates a new mock instance.
func NewMockMyInterface(ctrl *gomock.Controller) *MockMyInterface {
	mock := &MockMyInterface{ctrl: ctrl}
	mock.recorder = &MockMyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyInterface) EXPECT() *MockMyInterfaceMockRecorder {
	return m.recorder
}

// MyMethod mocks base method.
func (m *MockMyInterface) MyMethod(param1 *time.Time, param2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MyMethod", param1, param2)
}

// MyMethod indicates an expected call of MyMethod.
func (mr *MockMyInterfaceMockRecorder) MyMethod(param1, param2 any) *MockMyInterfaceMyMethodCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MyMethod", reflect.TypeOf((*MockMyInterface)(nil).MyMethod), param1, param2)
	return &MockMyInterfaceMyMethodCall{Call: call}
}

// MockMyInterfaceMyMethodCall wrap *gomock.Call
type MockMyInterfaceMyMethodCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockMyInterfaceMyMethodCall) Return() *MockMyInterfaceMyMethodCall {
	c.Call = c.Call.Return()
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockMyInterfaceMyMethodCall) Do(f func(*time.Time, string)) *MockMyInterfaceMyMethodCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockMyInterfaceMyMethodCall) DoAndReturn(f func(*time.Time, string)) *MockMyInterfaceMyMethodCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
